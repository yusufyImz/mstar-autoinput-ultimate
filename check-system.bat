@echo off
chcp 65001 > nul
color 0B

cls
echo ========================================
echo  Sistem Kontrol Scripti
echo  Club M Star AutoInput - Ultimate Edition
echo ========================================
echo.
echo Sistem bilgileri toplanƒ±yor...
echo.

:: Create report file
set "REPORT_FILE=system-check.txt"
echo ======================================== > %REPORT_FILE%
echo   Sistem Kontrol Raporu >> %REPORT_FILE%
echo   Tarih: %date% %time% >> %REPORT_FILE%
echo ======================================== >> %REPORT_FILE%
echo. >> %REPORT_FILE%

:: Windows Version
echo üñ•Ô∏è  ƒ∞≈ületim Sistemi
echo ======================================== >> %REPORT_FILE%
echo ƒ∞≈ületim Sistemi: >> %REPORT_FILE%
systeminfo | findstr /B /C:"OS Name" /C:"OS Version" >> %REPORT_FILE%
echo. >> %REPORT_FILE%

echo ‚úì ƒ∞≈ületim sistemi bilgisi alƒ±ndƒ±

:: CPU Information
echo üîß CPU Bilgisi
echo ======================================== >> %REPORT_FILE%
echo CPU: >> %REPORT_FILE%
wmic cpu get name,numberofcores,numberoflogicalprocessors >> %REPORT_FILE%
echo. >> %REPORT_FILE%

echo ‚úì CPU bilgisi alƒ±ndƒ±

:: RAM Information
echo üíæ Bellek ^(RAM^)
echo ======================================== >> %REPORT_FILE%
echo Bellek: >> %REPORT_FILE%
systeminfo | findstr /C:"Total Physical Memory" /C:"Available Physical Memory" >> %REPORT_FILE%
echo. >> %REPORT_FILE%

echo ‚úì RAM bilgisi alƒ±ndƒ±

:: Disk Space
echo üíø Disk Alanƒ±
echo ======================================== >> %REPORT_FILE%
echo Disk Alanƒ±: >> %REPORT_FILE%
wmic logicaldisk get caption,freespace,size >> %REPORT_FILE%
echo. >> %REPORT_FILE%

echo ‚úì Disk bilgisi alƒ±ndƒ±

:: Check Git
echo üì¶ Git Kurulumu
echo ======================================== >> %REPORT_FILE%
echo Git Kontrol√º: >> %REPORT_FILE%
git --version >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì Git kurulu >> %REPORT_FILE%
    echo ‚úì Git kurulu
) else (
    echo ‚ùå Git kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå Git kurulu deƒüil
)
echo. >> %REPORT_FILE%

:: Check Python
echo üêç Python Kurulumu
echo ======================================== >> %REPORT_FILE%
echo Python Kontrol√º: >> %REPORT_FILE%
python --version >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì Python kurulu >> %REPORT_FILE%
    echo ‚úì Python kurulu
    
    :: Python path
    where python >> %REPORT_FILE% 2>&1
    
    :: Check Python version details
    python -c "import sys; print(f'Python Yolu: {sys.executable}')" >> %REPORT_FILE% 2>&1
    python -c "import sys; print(f'Python S√ºr√ºm Bilgisi: {sys.version}')" >> %REPORT_FILE% 2>&1
) else (
    echo ‚ùå Python kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå Python kurulu deƒüil
)
echo. >> %REPORT_FILE%

:: Check pip
echo üì¶ pip Kurulumu
echo ======================================== >> %REPORT_FILE%
echo pip Kontrol√º: >> %REPORT_FILE%
python -m pip --version >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì pip kurulu >> %REPORT_FILE%
    echo ‚úì pip kurulu
) else (
    echo ‚ùå pip kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå pip kurulu deƒüil
)
echo. >> %REPORT_FILE%

:: Check installed Python packages
echo üìö Y√ºkl√º Python Paketleri
echo ======================================== >> %REPORT_FILE%
echo Y√ºkl√º Paketler: >> %REPORT_FILE%
echo. >> %REPORT_FILE%

:: Check each required package
set "ALL_INSTALLED=1"

echo torch: >> %REPORT_FILE%
python -c "import torch; print(f'  S√ºr√ºm: {torch.__version__}')" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì torch kurulu
) else (
    echo ‚ùå torch kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå torch kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo torchvision: >> %REPORT_FILE%
python -c "import torchvision; print(f'  S√ºr√ºm: {torchvision.__version__}')" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì torchvision kurulu
) else (
    echo ‚ùå torchvision kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå torchvision kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo opencv-python: >> %REPORT_FILE%
python -c "import cv2; print(f'  S√ºr√ºm: {cv2.__version__}')" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì opencv-python kurulu
) else (
    echo ‚ùå opencv-python kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå opencv-python kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo numpy: >> %REPORT_FILE%
python -c "import numpy; print(f'  S√ºr√ºm: {numpy.__version__}')" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì numpy kurulu
) else (
    echo ‚ùå numpy kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå numpy kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo flask: >> %REPORT_FILE%
python -c "import flask; print(f'  S√ºr√ºm: {flask.__version__}')" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì flask kurulu
) else (
    echo ‚ùå flask kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå flask kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo flask-cors: >> %REPORT_FILE%
python -c "import flask_cors" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì flask-cors kurulu
) else (
    echo ‚ùå flask-cors kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå flask-cors kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo pillow: >> %REPORT_FILE%
python -c "import PIL; print(f'  S√ºr√ºm: {PIL.__version__}')" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì pillow kurulu
) else (
    echo ‚ùå pillow kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå pillow kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo pynput: >> %REPORT_FILE%
python -c "import pynput" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì pynput kurulu
) else (
    echo ‚ùå pynput kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå pynput kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo mss: >> %REPORT_FILE%
python -c "import mss" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì mss kurulu
) else (
    echo ‚ùå mss kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå mss kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo requests: >> %REPORT_FILE%
python -c "import requests; print(f'  S√ºr√ºm: {requests.__version__}')" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì requests kurulu
) else (
    echo ‚ùå requests kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå requests kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo psutil: >> %REPORT_FILE%
python -c "import psutil; print(f'  S√ºr√ºm: {psutil.__version__}')" >> %REPORT_FILE% 2>&1
if %errorLevel% equ 0 (
    echo ‚úì psutil kurulu
) else (
    echo ‚ùå psutil kurulu deƒüil >> %REPORT_FILE%
    echo ‚ùå psutil kurulu deƒüil
    set "ALL_INSTALLED=0"
)

echo. >> %REPORT_FILE%

:: Check project folders
echo üìÅ Proje Klas√∂rleri
echo ======================================== >> %REPORT_FILE%
echo Proje Klas√∂rleri: >> %REPORT_FILE%

if exist "models\" (
    echo ‚úì models\ mevcut >> %REPORT_FILE%
    echo ‚úì models\ mevcut
) else (
    echo ‚ùå models\ bulunamadƒ± >> %REPORT_FILE%
    echo ‚ùå models\ bulunamadƒ±
)

if exist "cache\" (
    echo ‚úì cache\ mevcut >> %REPORT_FILE%
    echo ‚úì cache\ mevcut
) else (
    echo ‚ùå cache\ bulunamadƒ± >> %REPORT_FILE%
    echo ‚ùå cache\ bulunamadƒ±
)

if exist "logs\" (
    echo ‚úì logs\ mevcut >> %REPORT_FILE%
    echo ‚úì logs\ mevcut
) else (
    echo ‚ùå logs\ bulunamadƒ± >> %REPORT_FILE%
    echo ‚ùå logs\ bulunamadƒ±
)

if exist "user_data\" (
    echo ‚úì user_data\ mevcut >> %REPORT_FILE%
    echo ‚úì user_data\ mevcut
) else (
    echo ‚ùå user_data\ bulunamadƒ± >> %REPORT_FILE%
    echo ‚ùå user_data\ bulunamadƒ±
)

echo. >> %REPORT_FILE%

:: Check config file
echo ‚öôÔ∏è  Yapƒ±landƒ±rma Dosyasƒ±
echo ======================================== >> %REPORT_FILE%
echo Yapƒ±landƒ±rma: >> %REPORT_FILE%

if exist "config.json" (
    echo ‚úì config.json mevcut >> %REPORT_FILE%
    echo ‚úì config.json mevcut
) else (
    echo ‚ùå config.json bulunamadƒ± >> %REPORT_FILE%
    echo ‚ùå config.json bulunamadƒ±
)

echo. >> %REPORT_FILE%

:: Check main.py
echo üìÑ Ana Program Dosyasƒ±
echo ======================================== >> %REPORT_FILE%
echo Ana Dosya: >> %REPORT_FILE%

if exist "main.py" (
    echo ‚úì main.py mevcut >> %REPORT_FILE%
    echo ‚úì main.py mevcut
) else (
    echo ‚ùå main.py bulunamadƒ± >> %REPORT_FILE%
    echo ‚ùå main.py bulunamadƒ±
)

echo. >> %REPORT_FILE%

:: System Performance Info
echo üìä Sistem Performansƒ±
echo ======================================== >> %REPORT_FILE%
echo Sistem Performansƒ±: >> %REPORT_FILE%
python -c "import psutil; print(f'CPU Kullanƒ±mƒ±: {psutil.cpu_percent(interval=1)}%%'); print(f'RAM Kullanƒ±mƒ±: {psutil.virtual_memory().percent}%%')" >> %REPORT_FILE% 2>&1

echo ‚úì Performans bilgisi alƒ±ndƒ±

echo. >> %REPORT_FILE%

:: Summary
echo ========================================
echo ======================================== >> %REPORT_FILE%
echo   √ñZET >> %REPORT_FILE%
echo ======================================== >> %REPORT_FILE%
echo. >> %REPORT_FILE%

if %ALL_INSTALLED% equ 1 (
    echo ‚úÖ T√ºm gerekli paketler kurulu! >> %REPORT_FILE%
    echo ‚úÖ Sistem hazƒ±r, uygulama √ßalƒ±≈ütƒ±rƒ±labilir. >> %REPORT_FILE%
    echo.
    echo ‚úÖ T√ºm gerekli paketler kurulu!
    echo ‚úÖ Sistem hazƒ±r!
) else (
    echo ‚ö†Ô∏è  Bazƒ± paketler eksik! >> %REPORT_FILE%
    echo ‚ö†Ô∏è  setup.bat veya install-python-packages.bat √ßalƒ±≈ütƒ±rƒ±n. >> %REPORT_FILE%
    echo.
    echo ‚ö†Ô∏è  Bazƒ± paketler eksik!
    echo ‚ö†Ô∏è  Kurulum yapmanƒ±z gerekiyor.
)

echo. >> %REPORT_FILE%
echo Detaylƒ± rapor: %REPORT_FILE% >> %REPORT_FILE%
echo ======================================== >> %REPORT_FILE%

echo.
echo ========================================
echo   RAPOR OLU≈ûTURULDU
echo ========================================
echo.
echo Detaylƒ± rapor '%REPORT_FILE%' dosyasƒ±na kaydedildi.
echo Raporu a√ßmak i√ßin:
echo   - notepad %REPORT_FILE%
echo   VEYA
echo   - type %REPORT_FILE%
echo.

:: Ask to open report
set /p OPEN_REPORT="Raporu ≈üimdi a√ßmak ister misiniz? (E/H): "
if /i "%OPEN_REPORT%"=="E" (
    notepad %REPORT_FILE%
)

pause
